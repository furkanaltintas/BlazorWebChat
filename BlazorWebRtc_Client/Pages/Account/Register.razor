@page "/register"
@using BlazorWebRtc_Client.Services.Abstract
@using BlazorWebRtc_Client.Models.Request
@using Microsoft.AspNetCore.Components.Forms
@using Microsoft.AspNetCore.Http
@using System.IO;
@using System.Threading.Tasks;
@inject NavigationManager navigationManager
@inject IAccountService accountService
@inject IUploadService uploadService

<!DOCTYPE html>
<html lang="tr">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Register</title>
    <style>
        body {
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100vh;
            background-color: #f0f8ff;
            font-family: Arial, sans-serif;
        }

        .register-container {
            background-color: white;
            padding: 2rem;
            border-radius: 10px;
            box-shadow: 0 0 15px rgba(0, 0, 0, 0.1);
            max-width: 400px;
            width: 100%;
        }

            .register-container h2 {
                text-align: center;
                margin-bottom: 1.5rem;
                color: #007bff;
            }

            .register-container input {
                width: 100%;
                padding: 0.75rem;
                margin-bottom: 1rem;
                border-radius: 5px;
                border: 1px solid #ddd;
                font-size: 1rem;
            }

            .register-container button {
                width: 100%;
                padding: 0.75rem;
                background-color: #007bff;
                color: white;
                border: none;
                border-radius: 5px;
                font-size: 1rem;
                cursor: pointer;
            }

                .register-container button:hover {
                    background-color: #0056b3;
                }

            .register-container p {
                text-align: center;
                margin-top: 1rem;
            }

                .register-container p a {
                    color: #007bff;
                    text-decoration: none;
                }
    </style>
</head>

<body>
    <div class="register-container">
        <h2>Create an Account</h2>
        <EditForm Model="@registerCommand" OnValidSubmit="HandleRegister">
            <DataAnnotationsValidator />
            <ValidationSummary />

            <InputText @bind-Value="@registerCommand.UserName" placeholder="UserName" class="form-control"></InputText>
            <ValidationMessage For="@(() => registerCommand.UserName)"></ValidationMessage>

            <InputText @bind-Value="@registerCommand.Email" placeholder="Email" class="form-control"></InputText>
            <ValidationMessage For="@(() => registerCommand.Email)"></ValidationMessage>

            <InputText @bind-Value="@registerCommand.Password" placeholder="Password" type="password" class="form-control"></InputText>
            <ValidationMessage For="@(() => registerCommand.Password)"></ValidationMessage>

            <InputText @bind-Value="@registerCommand.ConfirmPassword" placeholder="ConfirmPassword" type="password" class="form-control"></InputText>
            <ValidationMessage For="@(() => registerCommand.ConfirmPassword)"></ValidationMessage>

            <InputFile OnChange="HandleProfilePictureChange"></InputFile>
            <button type="submit">Register</button>
        </EditForm>
        <p>Already have an account? <a href="/login">Login here</a></p>
    </div>
</body>
</html>

@code {
    RegisterCommand registerCommand = new();
    private IBrowserFile selectedFile;

    public async Task HandleRegister()
    {
        var response = await accountService.SignUp(registerCommand);
        if (response != null)
        {
            MultipartFormDataContent content = new();

            var fileContent = new StreamContent(selectedFile.OpenReadStream(maxAllowedSize: 1024 * 1024 * 15));
            content.Add(fileContent, "File", selectedFile.Name);
            content.Add(new StringContent(response.UserId), "UserId");
            var lastResponse = await uploadService.UploadFileAsync(content);
            if (lastResponse.IsSuccess)
                navigationManager.NavigateTo("login");
            else
                Console.WriteLine(lastResponse.Message);
        }
        else
            Console.WriteLine("error");
    }

    private void HandleProfilePictureChange(InputFileChangeEventArgs e)
    {
        selectedFile = e.File;
    }
}